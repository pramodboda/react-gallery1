{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","e","setState","searchField","target","value","fetch","then","response","json","users","this","filtersMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAGaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,mCAA8BH,EAAMI,QAAQC,GAAK,IAAjD,cACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHbC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAAiC,uBAAOZ,UAAU,cAAca,KAAK,OAAOF,YAAaA,EAAaG,SAAUF,MCyC1HG,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,gBAiBFJ,aAAe,SAACK,GAAD,OAAO,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfzD,EAAKL,MAAQ,CACXR,SAAU,GACVW,YAAa,IALE,E,gEASE,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAAD,OAAW,EAAKR,SAAS,CAACV,SAAUkB,S,+BAMlC,IAAD,EAEyBC,KAAKX,MAA9BR,EAFA,EAEAA,SAAUW,EAFV,EAEUA,YACXS,EAAkBpB,EAASqB,QAAQ,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASZ,EAAYW,kBAEpG,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,qBACA,cAAC,EAAD,CAAWW,YAAY,gBAAgBC,aAAce,KAAKf,eAC1D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BVI,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d06e69d.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className=\"card\">\n        <img alt=\"monster\" src={`https://picsum.photos/id/${props.monster.id + 1000}/200/300`} />\n        <h1>{props.monster.name}</h1>\n        <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\nimport {Card} from '../card/card.component';\nimport './card-list.style.css';\n\nexport const CardList = props => (\n    <div className=\"card-list\">\n        {props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n        ))}\n    </div>\n)","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => <input className=\"searchInput\" type=\"text\" placeholder={placeholder} onChange={handleChange}/>;","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.components';\n\n\nclass App extends Component {\n  constructor(state) {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    \n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(function(response){\n      return response.json()\n    })\n    .then((users) => this.setState({monsters: users}))\n  }\n  \n\n  handleChange = (e) => this.setState({searchField: e.target.value})\n\n  render() {\n\n    const {monsters, searchField} = this.state;\n    const filtersMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    \n    return (\n      <div className=\"App\">\n        <h1 className=\"page-title\">Gallery</h1>\n        <SearchBox placeholder=\"Search Author\" handleChange={this.handleChange}></SearchBox>\n        <CardList monsters={filtersMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}